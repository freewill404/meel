<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><category term="u_TaylorCodes" label="u/TaylorCodes"/><updated>2018-12-29T16:49:26+00:00</updated><icon>https://www.redditstatic.com/icon.png/</icon><id>/user/taylorcodes/.rss</id><link rel="self" href="https://www.reddit.com/user/taylorcodes/.rss" type="application/atom+xml" /><link rel="alternate" href="https://www.reddit.com/user/taylorcodes/" type="text/html" /><subtitle>Web Developer. Founder of Laravel, Forge, Envoyer, Spark, and more.</subtitle><title>overview for TaylorCodes</title><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;:)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_ecpelyo</id><link href="https://www.reddit.com/r/laravel/comments/a9yxbo/going_serverless_with_laravel/ecpelyo/"/><updated>2018-12-28T03:50:06+00:00</updated><title>/u/TaylorCodes on Going serverless with Laravel</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;So you want me to provision your server for free? :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_ecpelhm</id><link href="https://www.reddit.com/r/laravel/comments/aa0kvz/laravel_forge_questions/ecpelhm/"/><updated>2018-12-28T03:49:54+00:00</updated><title>/u/TaylorCodes on Laravel Forge questions</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I&amp;#39;ll try to get this fixed on 5.7 without breaking changes today.&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;Edit: &lt;a href=&quot;https://github.com/laravel/framework/pull/26604&quot;&gt;https://github.com/laravel/framework/pull/26604&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_eaarlhm</id><link href="https://www.reddit.com/r/laravel/comments/9zjl9w/for_anyone_thats_not_aware_laravel_57_causes/eaarlhm/"/><updated>2018-11-23T14:11:49+00:00</updated><title>/u/TaylorCodes on For anyone that's not aware, Laravel 5.7 causes validation to be called twice (including db and api calls) when you retrieve the validated input and won't be fixed for another 4 months</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;In previous years tickets were $399. I may have to raise that to either $449 or $499 this year because I actually lost $5,000 on Laracon 2017 and NYC is expensive :| ... I basically am fine with totally breaking even though and throwing the best conference possible since my livelihood comes from Forge/Envoyer/Spark/Nova.&lt;/p&gt; &lt;p&gt;My speaker budget was sort of inflated for 2017 though. I spent $60,000 on speakers... mainly because of speakers with high fees (Uncle Bob + Ryan Holiday).&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e9oed10</id><link href="https://www.reddit.com/r/laravel/comments/9wrv9f/laracon_vii_is_coming/e9oed10/"/><updated>2018-11-14T13:04:39+00:00</updated><title>/u/TaylorCodes on LARACON VII IS COMING</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel"/><content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href=&quot;https://www.reddit.com/r/laravel/comments/9wrv9f/laracon_vii_is_coming/&quot;&gt; &lt;img src=&quot;https://b.thumbs.redditmedia.com/sXy7PgxubThQ1LngMCyNpu-vpof6V6IaHp0GQjgpaGM.jpg&quot; alt=&quot;LARACON VII IS COMING&quot; title=&quot;LARACON VII IS COMING&quot; /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href=&quot;https://www.reddit.com/user/TaylorCodes&quot;&gt; /u/TaylorCodes &lt;/a&gt; &amp;#32; to &amp;#32; &lt;a href=&quot;https://www.reddit.com/r/laravel/&quot;&gt; r/laravel &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href=&quot;https://laracon.us&quot;&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href=&quot;https://www.reddit.com/r/laravel/comments/9wrv9f/laracon_vii_is_coming/&quot;&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><id>t3_9wrv9f</id><link href="https://www.reddit.com/r/laravel/comments/9wrv9f/laracon_vii_is_coming/" /><updated>2018-11-13T18:51:51+00:00</updated><title>LARACON VII IS COMING</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Thanks for your response!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e8akp3d</id><link href="https://www.reddit.com/r/PHP/comments/9qjd46/i_did_some_benchmarks_of_laravelumenphp_with_and/e8akp3d/"/><updated>2018-10-23T12:45:47+00:00</updated><title>/u/TaylorCodes on I did some benchmarks of Larave/Lumen/PHP with and without swoole. At what stage do the creators of Laravel take a hard look at the framework and think, instead of adding useless features, why don't we decouple it so people can use what they need.</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Again, I talk to people on a fairly regular basis who scale Laravel for VERY large applications. If you want me to link you up with them so you can chat let me know.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e8a15ir</id><link href="https://www.reddit.com/r/PHP/comments/9qjd46/i_did_some_benchmarks_of_laravelumenphp_with_and/e8a15ir/"/><updated>2018-10-23T03:39:46+00:00</updated><title>/u/TaylorCodes on I did some benchmarks of Larave/Lumen/PHP with and without swoole. At what stage do the creators of Laravel take a hard look at the framework and think, instead of adding useless features, why don't we decouple it so people can use what they need.</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I see you’ve made several threads on how “Laravel won’t scale.” You should come to Laracon and talk to some of the people scaling Laravel to crazy levels. In fact, I’ll pay for your ticket to either US or EU Laracon. Get in touch if interested.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e89tznp</id><link href="https://www.reddit.com/r/PHP/comments/9qjd46/i_did_some_benchmarks_of_laravelumenphp_with_and/e89tznp/"/><updated>2018-10-23T01:44:10+00:00</updated><title>/u/TaylorCodes on I did some benchmarks of Larave/Lumen/PHP with and without swoole. At what stage do the creators of Laravel take a hard look at the framework and think, instead of adding useless features, why don't we decouple it so people can use what they need.</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Would be a great addition I think. Would solve the common complaint of frameworks having to bootstrap the same code on every request - and without having to turn to things like PHP process managers.&lt;/p&gt; &lt;p&gt;I guess the preload cache would be flushed on an FPM reload?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e840y4y</id><link href="https://www.reddit.com/r/PHP/comments/9ps887/rfc_opcache_preloading_dmitry_stogov/e840y4y/"/><updated>2018-10-20T09:33:59+00:00</updated><title>/u/TaylorCodes on [RFC] Opcache Preloading (Dmitry Stogov)</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;You can do it the way you suggest. It works fine. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e7nd8bn</id><link href="https://www.reddit.com/r/laravel/comments/9nfvpq/is_laravel_passport_really_necessary_when_using_a/e7nd8bn/"/><updated>2018-10-12T17:58:56+00:00</updated><title>/u/TaylorCodes on Is Laravel Passport really necessary when using a Vue SPA?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;You can display a computed field as HTML, allowing you to essentially render a view within a field. You could do this on an index-only field to create a button in the row as you describe:&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://nova.laravel.com/docs/1.0/resources/fields.html#computed-fields&quot;&gt;https://nova.laravel.com/docs/1.0/resources/fields.html#computed-fields&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e7adknf</id><link href="https://www.reddit.com/r/laravel/comments/9lqvqp/is_nova_supposed_to_be_super_niche/e7adknf/"/><updated>2018-10-06T18:58:11+00:00</updated><title>/u/TaylorCodes on Is Nova supposed to be super niche?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;It doesn&amp;#39;t start the session unless &lt;em&gt;you&lt;/em&gt; have that middleware assigned to the route. In fact, Laravel ships with a &amp;quot;routes/api.php&amp;quot; file that is assigned a set of middleware that DOES NOT include sessions at all. So, you are wrong about all of that. How people can be so wrong about Laravel and so confident about it at the same time continues to amaze me :)&lt;/p&gt; &lt;p&gt;Reminder: &lt;a href=&quot;https://medium.com/@taylorotwell/measuring-code-complexity-64356da605f9&quot;&gt;https://medium.com/@taylorotwell/measuring-code-complexity-64356da605f9&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e6soc6u</id><link href="https://www.reddit.com/r/PHP/comments/9jcxlx/rasmus_lerdorf_php_frameworks_all_suck_though/e6soc6u/"/><updated>2018-09-28T13:55:50+00:00</updated><title>/u/TaylorCodes on Rasmus Lerdorf : PHP Frameworks all suck! Though everyone needs a framework, just not a general purpose framework</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Laravel 4 never instantiated everything for every request. So, if that is what he said, he was wrong.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e6qyte5</id><link href="https://www.reddit.com/r/PHP/comments/9jcxlx/rasmus_lerdorf_php_frameworks_all_suck_though/e6qyte5/"/><updated>2018-09-27T18:37:38+00:00</updated><title>/u/TaylorCodes on Rasmus Lerdorf : PHP Frameworks all suck! Though everyone needs a framework, just not a general purpose framework</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;If you wanted to test this in isolation you would need to put it behind a repository and fake / mock it - just like Doctrine. As far as testing goes, there is literally no differences between the patterns - both require repositories. If there is a difference, please enlighten me.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e64qkns</id><link href="https://www.reddit.com/r/PHP/comments/9gcm57/are_static_methods_evil/e64qkns/"/><updated>2018-09-17T13:45:47+00:00</updated><title>/u/TaylorCodes on Are static methods evil?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Ah, ok! Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e64qhfg</id><link href="https://www.reddit.com/r/PHP/comments/9gcm57/are_static_methods_evil/e64qhfg/"/><updated>2018-09-17T13:44:14+00:00</updated><title>/u/TaylorCodes on Are static methods evil?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;If they are creating problems when testing or maintaining your application, sure. Everything needs to be grounded in reality and actual code. It&amp;#39;s hard to broad sweep a certain concept as &amp;quot;evil&amp;quot; when the concept is divorced from any actual codebase.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e64qh3q</id><link href="https://www.reddit.com/r/PHP/comments/9gcm57/are_static_methods_evil/e64qh3q/"/><updated>2018-09-17T13:44:04+00:00</updated><title>/u/TaylorCodes on Are static methods evil?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;I don&amp;#39;t necessarily consider it &amp;quot;evil&amp;quot;. It&amp;#39;s a trade-off. First, in your example, when testing, &lt;em&gt;all&lt;/em&gt; database interaction is either going to have to actually hit the database or placed behind repositories so it can be mocked. This is true for both Eloquent and Doctrine or any other ORM. &lt;/p&gt; &lt;p&gt;So, in my case, I usually just hit an SQLite in-memory database because my tests still run extremely fast and I can just actually verify things are working how I expect. I do still actually use a repository class a lot of the time just in case the data access logic needs to be re-used by other services.&lt;/p&gt; &lt;p&gt;But, if you don&amp;#39;t want to hit the database, of course you need to place your database interactions behind a repository so you can mock or fake that and inject it into your controllers / whatever else using Laravel&amp;#39;s auto-wiring dependency injection.&lt;/p&gt; &lt;p&gt;That being said - you will have to have &lt;em&gt;some&lt;/em&gt; tests that actually hit a real database otherwise you have no idea if your data storage layer is working at all.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e64qf61</id><link href="https://www.reddit.com/r/PHP/comments/9gcm57/are_static_methods_evil/e64qf61/"/><updated>2018-09-17T13:43:09+00:00</updated><title>/u/TaylorCodes on Are static methods evil?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Thanks for your work on this!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e63uydr</id><link href="https://www.reddit.com/r/laravel/comments/9gcvyh/laravel_zero_57_is_now_available/e63uydr/"/><updated>2018-09-17T00:49:55+00:00</updated><title>/u/TaylorCodes on Laravel Zero 5.7 Is Now Available</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;It&amp;#39;s not really a word I made up. It&amp;#39;s the common way to refer to those types of functions in computer programming.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Deterministic_algorithm&quot;&gt;https://en.wikipedia.org/wiki/Deterministic_algorithm&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Edit: Apparently pure function is also acceptable: &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_function&quot;&gt;https://en.wikipedia.org/wiki/Pure_function&lt;/a&gt;&lt;/p&gt; &lt;p&gt;TIL :) Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e63uun2</id><link href="https://www.reddit.com/r/PHP/comments/9gcm57/are_static_methods_evil/e63uun2/"/><updated>2018-09-17T00:48:13+00:00</updated><title>/u/TaylorCodes on Are static methods evil?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Static methods are not evil if if the method is &amp;quot;deterministic&amp;quot;. Deterministic means it returns the same value every time it is called with the same arguments.&lt;/p&gt; &lt;p&gt;For example: strtolower(&amp;#39;string&amp;#39;) will always return the same value. Therefore, it is perfectly fine for it to be a static method / global function as it&amp;#39;s output is entirely predictable and simple to account for during testing.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e6360jr</id><link href="https://www.reddit.com/r/PHP/comments/9gcm57/are_static_methods_evil/e6360jr/"/><updated>2018-09-16T18:45:26+00:00</updated><title>/u/TaylorCodes on Are static methods evil?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Just a silly nitpick, but it doesn&amp;#39;t actually guarantee that the implementing class does &lt;em&gt;anything&lt;/em&gt;. It just guarantees it accepts the correct type:&lt;/p&gt; &lt;p&gt;function foo(string $foo) : string { DB::table(&amp;#39;users&amp;#39;)-&amp;gt;truncate(); return $foo; }&lt;/p&gt; &lt;p&gt;foo(&amp;#39;string&amp;#39;);&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e5nyjmx</id><link href="https://www.reddit.com/r/laravel/comments/9e8bv1/why_doesnt_laravel_use_type_hints_and_return_types/e5nyjmx/"/><updated>2018-09-09T14:27:11+00:00</updated><title>/u/TaylorCodes on Why doesn't Laravel use type hints and return types?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="laravel" label="r/laravel" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Laravel does use type hints. That’s literally how the container works (via type hints). We use type hints all the time in every component of the framework.&lt;/p&gt; &lt;p&gt;In years past, I still firmly believe type hints had only very modest value in PHP. However, PHP static analysis tools are becoming a bit more popular and powerful so the hints could become more valuable as well.&lt;/p&gt; &lt;p&gt;My view of type hints in general isn’t much different than Uncle Bobs: &lt;a href=&quot;http://blog.cleancoder.com/uncle-bob/2016/05/01/TypeWars.html&quot;&gt;http://blog.cleancoder.com/uncle-bob/2016/05/01/TypeWars.html&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e5nusms</id><link href="https://www.reddit.com/r/laravel/comments/9e8bv1/why_doesnt_laravel_use_type_hints_and_return_types/e5nusms/"/><updated>2018-09-09T13:08:30+00:00</updated><title>/u/TaylorCodes on Why doesn't Laravel use type hints and return types?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Can you describe a situation that Eloquent makes difficult to test so that I can show you that it doesn&amp;#39;t? Thanks.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e59rpzl</id><link href="https://www.reddit.com/r/PHP/comments/9caayk/use_laravels_eloquent_in_any_php_application/e59rpzl/"/><updated>2018-09-02T15:59:16+00:00</updated><title>/u/TaylorCodes on Use Laravel’s Eloquent in Any PHP Application.</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;Just try both for a bit and see what you like better. You are in a very bad location if you want an unbiased opinion, heh.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e4u831c</id><link href="https://www.reddit.com/r/PHP/comments/9abrjc/looking_for_a_clear_unbiased_comparison_on/e4u831c/"/><updated>2018-08-26T01:02:07+00:00</updated><title>/u/TaylorCodes on Looking for a clear, unbiased comparison on Laravel vs. Symphony?</title></entry><entry><author><name>/u/TaylorCodes</name><uri>https://www.reddit.com/user/TaylorCodes</uri></author><category term="PHP" label="r/PHP" /><content type="html">&lt;!-- SC_OFF --&gt;&lt;div class=&quot;md&quot;&gt;&lt;p&gt;It&amp;#39;s not a waste of time. If you write good tests.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt;</content><id>t1_e4r9o6f</id><link href="https://www.reddit.com/r/PHP/comments/99y3zo/explain_to_me_why_unit_testing_is_not_a_waste_of/e4r9o6f/"/><updated>2018-08-24T15:19:55+00:00</updated><title>/u/TaylorCodes on Explain to me why unit testing is not a waste of time ?</title></entry></feed>
